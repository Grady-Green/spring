<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.UserDao">

    <!--<cache  eviction="LRU" type=""/>-->
    <resultMap id="UserMap" type="com.entity.User">
        <id column="id" property="id"></id>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="age" column="age"/>
        <result property="address" column="address"/>
        <result property="height" column="height"/>
    </resultMap>
    <sql id="where">
        <where>
            1=1
                <if test="id!=null">
                    AND id =#{id}
                </if>
                <if test="name!=null">
                    AND name =#{name}
                </if>
                <if test="sex!=null">
                    AND sex =#{sex}
                </if>
                <if test="age!=null">
                    AND age =#{age}
                </if>
                <if test="address!=null">
                    AND address =#{address}
                </if>
                <if test="height!=null">
                    AND height =#{height}
                </if>
        </where>
    </sql>

    <update id="update" parameterType="com.entity.User" keyProperty="id">
        UPDATE user
        <set>
                <if test="id!=null">
                id = #{id},
                </if>
                <if test="name!=null">
                name = #{name},
                </if>
                <if test="sex!=null">
                sex = #{sex},
                </if>
                <if test="age!=null">
                age = #{age},
                </if>
                <if test="address!=null">
                address = #{address},
                </if>
                <if test="height!=null">
                height = #{height}
                </if>
        </set>
        <where>
            id=#{id}
        </where>
    </update>

    <!-- select -->
        <select id="get" parameterType="long" resultMap="UserMap">
            select * from  user where id=#{id}
        </select>
        <select id="getByCondition" parameterType="com.entity.User"  resultMap="UserMap">
            select * from  user <include refid="where"/>
        </select>

        <!-- Page -->
        <select id="countByCondition" parameterType="com.entity.User" resultType="java.lang.Integer">
            SELECT COUNT(*) FROM user
            <include refid="where"/>
        </select>
        <select id="getPageByCodition" parameterType="com.entity.User" resultMap="UserMap">
            select * from user <include refid="where"/>
            <include refid="base.order"/>
            limit #{pageIndex},#{pageSize}
</select>



    <!-- insert -->
    <insert id="save" parameterType="com.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user
        (
        id
        
                ,name

                ,sex

                ,age

                ,address

                ,height
        )
        VALUES
        (
        #{id}
        
                ,#{name}

                ,#{sex}

                ,#{age}

                ,#{address}

                ,#{height}
        )
    </insert>
    <insert id="saveAndGetId" parameterType="com.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user
        (
        id
        
                ,name

                ,sex

                ,age

                ,address

                ,height
        )
        VALUES
        (
        #{id}
        
                ,#{name}

                ,#{sex}

                ,#{age}

                ,#{address}

                ,#{height}
        )
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <insert id="saveList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user
        (
        id
        
                ,name

                ,sex

                ,age

                ,address

                ,height
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                    #{item.id}
                                                            ,#{item.name}
                                        ,#{item.sex}
                                        ,#{item.age}
                                        ,#{item.address}
                                        ,#{item.height}
            )
        </foreach>
    </insert>

    <!-- delete -->
    <delete id="delete" parameterType="long">
        delete from  user WHERE   id=#{id}
    </delete>
    <!-- 实体 -->
    <delete id="delEntity" parameterType="com.entity.User">
        delete from user WHERE  id=#{id}
    </delete>
</mapper>
